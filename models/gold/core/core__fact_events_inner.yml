version: 2
models:
  - name: core__fact_events_inner
    description: |-
      Records every event that occurs within inner instructions (Cross-Program Invocations, or CPI) on the Solana blockchain. Each row represents an event triggered by a program calling another program during transaction execution, capturing the full context of nested program interactions. This table includes all inner events observed on Solana mainnet, with detailed indexing to support analysis of deeply nested program flows. It enables granular tracing of protocol and application logic, supporting advanced analytics on composability, protocol integrations, and on-chain automation. Events are uniquely identified by block, transaction, instruction, and inner instruction indices. This model is essential for understanding the complete execution path of complex Solana transactions and supports downstream analytics on program-to-program interactions.
    recent_date_filter: &recent_date_filter
      config:
        where: modified_timestamp >= current_date - 7
    tests:
      - reference_tx_missing:
          reference_tables:
            - 'silver__events_inner'
          id_column: 'tx_id'
    columns:
      - name: BLOCK_TIMESTAMP
        description: "{{ doc('block_timestamp') }}"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null:
              where: block_id > 39824213 and _inserted_timestamp >= current_date - 7
      - name: BLOCK_ID
        description: "{{ doc('block_id') }}"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null: *recent_date_filter
      - name: TX_ID
        description: "{{ doc('tx_id') }}"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null: *recent_date_filter
      - name: SIGNERS
        description: "{{ doc('signers') }}"
        tests: 
          - dbt_expectations.expect_column_to_exist
          - not_null: *recent_date_filter
      - name: SUCCEEDED
        description: "{{ doc('tx_succeeded') }}"
        tests: 
          - dbt_expectations.expect_column_to_exist
          - not_null: *recent_date_filter
      - name: INSTRUCTION_INDEX
        description: "{{ doc('event_index') }}"
        tests:
          - dbt_expectations.expect_column_to_exist
          - not_null: *recent_date_filter
      - name: INNER_INDEX
        description: "{{ doc('inner_index') }}"
        tests:  
          - dbt_expectations.expect_column_to_exist
          - not_null: *recent_date_filter
      - name: INSTRUCTION_PROGRAM_ID
        description: "{{ doc('instruction_program_id') }}"
        tests:
          - dbt_expectations.expect_column_to_exist  
          - not_null: *recent_date_filter
      - name: PROGRAM_ID
        description: "{{ doc('program_id') }}"
        tests:
          - dbt_expectations.expect_column_to_exist  
          - not_null: *recent_date_filter
      - name: EVENT_TYPE
        description: "{{ doc('event_type') }}"
        tests:
          - dbt_expectations.expect_column_to_exist  
      - name: INSTRUCTION
        description: "{{ doc('instruction') }}"
        tests:
          - dbt_expectations.expect_column_to_exist   
          - not_null: *recent_date_filter
      - name: _INSERTED_TIMESTAMP
        description: "{{ doc('_inserted_timestamp') }}"
        tests:
          - dbt_expectations.expect_column_to_exist   
          - not_null
      - name: FACT_EVENTS_INNER_ID
        description: '{{ doc("pk") }}'
        tests:
          - dbt_expectations.expect_column_to_exist   
          - not_null: *recent_date_filter
          - unique: *recent_date_filter
      - name: INSERTED_TIMESTAMP
        description: '{{ doc("inserted_timestamp") }}'   
        tests:
          - dbt_expectations.expect_column_to_exist   
          - not_null: *recent_date_filter
      - name: MODIFIED_TIMESTAMP
        description: '{{ doc("modified_timestamp") }}' 
        tests:
          - dbt_expectations.expect_column_to_exist   
          - not_null
          